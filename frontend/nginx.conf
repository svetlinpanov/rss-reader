# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    upstream go-api {
        server api:8080;
    }

    server {
        # listen on port 80
        listen 3000;
        # save logs here
        access_log /var/log/nginx/access.log compression;
        server_name rss-app;
        # where the root here
        root /var/www/rss-app;
        # what file to server as index
        index index.html index.htm;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
            # add_header Last-Modified $date_gmt;
            # add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            # if_modified_since off;
            # expires off;
            # etag off;
        }

        # Do not cache sw.js, required for offline-first updates.
        location /sw.js {
            add_header Cache-Control "no-cache";
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;
            expires off;
            access_log off;
        }

        # # Media: images, icons, video, audio, HTC
        # location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        #   expires 1M;
        #   access_log off;
        #   add_header Cache-Control "public";
        # }

        # location ~* \.(css|js)$ {
        #         expires max;
        #         add_header Pragma public;
        #         etag off;
        #         add_header Cache-Control "public";
        #         add_header Last-Modified "";
        #         rewrite  "^/(.*)\/(style|script)\.min\.([\d\w]{32})\.(js|css)$" /$1/$2.min.$4 break;
        # }
        

         # Requests for api passed on to GO on port 8080
        location /api/ {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy false;

            proxy_pass http://go-api;
            proxy_redirect off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}